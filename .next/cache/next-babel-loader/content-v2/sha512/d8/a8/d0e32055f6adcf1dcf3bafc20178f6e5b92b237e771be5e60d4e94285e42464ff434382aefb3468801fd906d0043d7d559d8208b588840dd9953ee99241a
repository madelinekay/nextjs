{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/madeline/projects/react/maximillian/hooks/nextjs-complete/pages/[meetupId].js\";\nimport React, { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = props => {\n  const {\n    meetup\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: meetup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: meetup.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      meetup: props.meetup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetup: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/madeline/projects/react/maximillian/hooks/nextjs-complete/pages/[meetupId].js"],"names":["React","Fragment","MongoClient","ObjectId","MeetupDetail","MeetupDetailPage","props","meetup","title","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id","address","image"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQC,MAAM,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,MAAM,CAACE;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEH,KAAK,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAXD;;AAaA,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAahB,MAAD,KAAa;AAC9BiB,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAElB,MAAM,CAACW,GAAP,CAAWQ,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AACrDZ,IAAAA,GAAG,EAAEf,QAAQ,CAACsB,QAAD;AADwC,GAA1B,CAA7B;AAIAd,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AACNwB,QAAAA,EAAE,EAAEF,cAAc,CAACX,GAAf,CAAmBQ,QAAnB,EADE;AAENlB,QAAAA,KAAK,EAAEqB,cAAc,CAACrB,KAFhB;AAGNwB,QAAAA,OAAO,EAAEH,cAAc,CAACG,OAHlB;AAINC,QAAAA,KAAK,EAAEJ,cAAc,CAACI,KAJhB;AAKNxB,QAAAA,WAAW,EAAEoB,cAAc,CAACpB;AALtB;AADH;AADF,GAAP;AAWD;AAED,eAAeJ,gBAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = (props) => {\n  const { meetup } = props;\n  return (\n    <Fragment>\n      <Head>\n        <title>{meetup.title}</title>\n        <meta name=\"description\" content={meetup.description} />\n      </Head>\n      <MeetupDetail meetup={props.meetup} />\n    </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetup: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}