{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/madeline/projects/react/maximillian/hooks/nextjs-complete/pages/[meetupId].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    meetup: props.meetup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetup: _objectSpread(_objectSpread({}, selectedMeetup), {}, {\n        id: selectedMeetup._id.toString()\n      })\n    }\n  };\n}\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/madeline/projects/react/maximillian/hooks/nextjs-complete/pages/[meetupId].js"],"names":["React","Fragment","MongoClient","ObjectId","MeetupDetail","MeetupDetailPage","props","meetup","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,sBAAO,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,KAAK,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAad,MAAD,KAAa;AAC9Be,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAEhB,MAAM,CAACS,GAAP,CAAWQ,QAAX;AADJ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AACrDZ,IAAAA,GAAG,EAAEb,QAAQ,CAACoB,QAAD;AADwC,GAA1B,CAA7B;AAIAd,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,kCACDoB,cADC;AAEJE,QAAAA,EAAE,EAAEF,cAAc,CAACX,GAAf,CAAmBQ,QAAnB;AAFA;AADD;AADF,GAAP;AAQD;AAED,eAAenB,gBAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\n\nconst MeetupDetailPage = (props) => {\n  return <MeetupDetail meetup={props.meetup} />;\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetup: {\n        ...selectedMeetup,\n        id: selectedMeetup._id.toString(),\n      },\n    },\n  };\n}\n\nexport default MeetupDetailPage;\n"]},"metadata":{},"sourceType":"module"}