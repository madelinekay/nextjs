{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/madeline/projects/react/maximillian/hooks/nextjs-complete/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\"; // const DUMMY_DATA = [\n//   {\n//     id: \"m1\",\n//     title: \"This is a first meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/2560px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Meetupstreet 5, 12345 Meetup City\",\n//     description:\n//       \"This is a first, amazing meetup which you definitely should not miss. It will be a lot of fun!\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"Deer Cuddle Puddle\",\n//     image:\n//       \"https://i.guim.co.uk/img/media/0c2f314802f5d79bf954c1906679e0c61668000e/0_0_1894_1136/master/1894.jpg?width=1200&quality=85&auto=format&fit=max&s=8185166740ffcca3f9536d7b2640a835\",\n//     address: \"321 Legion Way SE, Olympia, WA\",\n//     description:\n//       \"This is a first, amazing meetup which you definitely should not miss. It will be a lot of fun! July 21 @ 6:30 D.T. (deer time)\",\n//   },\n// ];\n\nconst HomePage = props => {\n  console.log(\"Homepage props.meetups\", props.meetups);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  // always must return an object with props property\n  const client = await MongoClient.connect(\"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  console.log(\"meetups\", meetups);\n  const props = {\n    meetups: meetups.map(meetup => _objectSpread(_objectSpread({}, meetup), {}, {\n      id: meetup._id.toString()\n    }))\n  };\n  console.log(\"props\", props);\n  return {\n    props,\n    revalidate: 1\n  };\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: { meetups: DUMMY_DATA },\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/madeline/projects/react/maximillian/hooks/nextjs-complete/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","console","log","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","id","_id","toString","revalidate"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAK,CAACG,OAA5C;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEH,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;AAKA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,OAAvB;AAEA,QAAMH,KAAK,GAAG;AACZG,IAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,oCAChBA,MADgB;AAEnBC,MAAAA,EAAE,EAAED,MAAM,CAACE,GAAP,CAAWC,QAAX;AAFe,MAAZ;AADG,GAAd;AAOAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,SAAO;AACLA,IAAAA,KADK;AAELkB,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAenB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n// const DUMMY_DATA = [\n//   {\n//     id: \"m1\",\n//     title: \"This is a first meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/2560px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Meetupstreet 5, 12345 Meetup City\",\n//     description:\n//       \"This is a first, amazing meetup which you definitely should not miss. It will be a lot of fun!\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"Deer Cuddle Puddle\",\n//     image:\n//       \"https://i.guim.co.uk/img/media/0c2f314802f5d79bf954c1906679e0c61668000e/0_0_1894_1136/master/1894.jpg?width=1200&quality=85&auto=format&fit=max&s=8185166740ffcca3f9536d7b2640a835\",\n//     address: \"321 Legion Way SE, Olympia, WA\",\n//     description:\n//       \"This is a first, amazing meetup which you definitely should not miss. It will be a lot of fun! July 21 @ 6:30 D.T. (deer time)\",\n//   },\n// ];\n\nconst HomePage = (props) => {\n  console.log(\"Homepage props.meetups\", props.meetups);\n  return <MeetupList meetups={props.meetups} />;\n};\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  // always must return an object with props property\n  const client = await MongoClient.connect(\n    \"mongodb+srv://mongouser:mongopassword@cluster0.43i2a.mongodb.net/meetups_db?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  console.log(\"meetups\", meetups);\n\n  const props = {\n    meetups: meetups.map((meetup) => ({\n      ...meetup,\n      id: meetup._id.toString(),\n    })),\n  };\n\n  console.log(\"props\", props);\n\n  return {\n    props,\n    revalidate: 1,\n  };\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: { meetups: DUMMY_DATA },\n//   };\n// }\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}